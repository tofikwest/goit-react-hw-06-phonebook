{"version":3,"sources":["components/contactsList/ContactsList.module.css","components/filter/Filter.module.css","components/section/Section.module.css","redux/phonebook/phoneBook.actions.js","redux/phonebook/phoneBook.reducer.js","redux/rootReducer.js","redux/store.js","components/contactsList/ContactsList.js","components/filter/Filter.js","components/form/ContactForm.js","components/section/Section.js","App.js","index.js","components/form/Form.module.css"],"names":["module","exports","addContact","createAction","contact","payload","id","uuid","removeContact","filterContacts","ItemsReducer","createReducer","state","action","filter","item","filterReducer","_","phoneBookReducer","combineReducers","items","rootReducer","contacts","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","mapDispatchToProps","onDelete","connect","map","className","Styles","renderLi","number","btnLi","type","onClick","handleChange","evt","target","value","contactInput","placeholder","onChange","ContactForm","event","setState","onHandleSubmit","preventDefault","props","find","alert","reset","form","onSubmit","this","inputSec","pattern","title","required","input","btn","Component","prototypes","PropTypes","func","isRequired","Section","children","defaultProps","App","ContactsList","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d9054bff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"renderLi\":\"ContactsList_renderLi__2Cjg_\",\"btnLi\":\"ContactsList_btnLi__2hRv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInput\":\"Filter_contactInput__18ODf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__6lj2W\"};","// react-redux\r\n\r\n// import { v4 as uuid } from \"uuid\";\r\n\r\n// const ADD_CONTACT = \"phonebook/addContact\";\r\n// const REMOVE_CONTACT = \"phonebook/removeContact\";\r\n// const FILTER_CONTACTS = \"phonebook/filterContacts\";\r\n\r\n// const addContact = (contact) => ({\r\n//   type: ADD_CONTACT,\r\n//   payload: {\r\n//     ...contact,\r\n//     id: uuid(),\r\n//   },\r\n// });\r\n\r\n// const removeContact = (payload) => ({\r\n//   type: REMOVE_CONTACT,\r\n//   payload: payload,\r\n// });\r\n\r\n// const filterContacts = (payload) => ({\r\n//   type: FILTER_CONTACTS,\r\n//   payload: payload.target.value,\r\n// });\r\n\r\n// export { addContact, removeContact, filterContacts };\r\n\r\n// redux-toolkit \r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst addContact = createAction(\"phonebook/addContact\", (contact) => {\r\n  return {\r\n    payload: {\r\n      ...contact,\r\n      id: uuid(),\r\n    },\r\n  };\r\n});\r\nconst removeContact = createAction(\"phonebook/removeContact\");\r\nconst filterContacts = createAction(\"phonebook/filterContacts\");\r\n\r\nexport { addContact, removeContact, filterContacts };","// react-redux\r\n// import { combineReducers } from \"redux\";\r\n// import {\r\n//   ADD_CONTACT,\r\n//   FILTER_CONTACTS,\r\n//   REMOVE_CONTACT,\r\n// } from \"./phoneBook.types\";\r\n\r\n// const initialState = {\r\n//   items: [],\r\n//   filter: \"\",\r\n// };\r\n\r\n// const itemsReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case ADD_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         items: [...state.items, action.payload],\r\n//       };\r\n\r\n//     case REMOVE_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         items: [...state.items.filter((item) => item.id !== action.payload)],\r\n//       };\r\n\r\n//     case FILTER_CONTACTS:\r\n//       return {\r\n//         ...state,\r\n//         filter: action.payload,\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const phoneBookReducer = combineReducers({\r\n//   items: itemsReducer,\r\n// });\r\n\r\n// export default phoneBookReducer;\r\n\r\n// Redux Toolkit\r\nimport { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContact, filterContacts } from \"./phoneBook.actions\";\r\n\r\nconst ItemsReducer = createReducer([], {\r\n  [addContact]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n  [removeContact]: (state, action) => [\r\n    ...state.filter((item) => item.id !== action.payload),\r\n  ],\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nconst phoneBookReducer = combineReducers({\r\n  items: ItemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default phoneBookReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport phoneBookReducer from \"./phonebook/phoneBook.reducer.js\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phoneBookReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","// Redux version\r\n// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import rootReducer from \"./rootReducer\";\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n// -----------------------------------------------------------------\r\n// Redux Toolkit\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\r\nimport Styles from \"./ContactsList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/phonebook/phoneBook.actions\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id} className={Styles.renderLi}>\r\n          {contact.name}: {contact.number}\r\n          <button\r\n            className={Styles.btnLi}\r\n            type=\"button\"\r\n            onClick={() => onDelete(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (state) => {\r\n  const items = state.contacts.items;\r\n  const filter = state.contacts.filter;\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const filteredContacts = items.filter((item) =>\r\n    item.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  return filteredContacts;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getVisibleContacts(state),\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { onDelete: removeContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport Styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/phonebook/phoneBook.actions\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        className={Styles.contactInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        placeholder=\"Поиск по имени...\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleChange: (evt) => filterContacts(evt.target.value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Styles from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/phonebook/phoneBook.actions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const contactFind = this.props.contacts.find(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    if (contactFind) {\r\n      alert(`Имя ${this.state.name} занято введите другое имя!`);\r\n      return;\r\n    }\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={Styles.form}>\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            <input\r\n              className={Styles.inputSec}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Имя:\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[A-ZA-ZА-ЯА-Я]+(([' -][A-ZA-ZА-ЯА-Я])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <input\r\n              className={Styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"Телефон:\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={Styles.btn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.prototypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = { addContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\nimport Styles from \"./Section.module.css\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <section>\r\n        <h2 className={Styles.title}>{title}</h2>\r\n        {children}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nSection.defaultProps = {\r\n  title: \"\",\r\n  children: [],\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport ContactsList from \"./components/contactsList/ContactsList\";\r\nimport Filter from \"./components/filter/Filter\";\r\nimport ContactForm from \"./components/form/ContactForm\";\r\nimport Section from \"./components/section/Section\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Phonebook\"}>\r\n          <ContactForm />\r\n        </Section>\r\n        <Section title={\"Contacts\"}>\r\n          <Filter />\r\n          <ContactsList />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__IiiX7\",\"btn\":\"Form_btn__2HQ_t\",\"input\":\"Form_input__1V8VG\",\"inputSec\":\"Form_inputSec__2Fipn\"};"],"sourceRoot":""}